Zypin CLI Test Results
Generated on: Mon Sep 22 19:36:57 +07 2025
===========================================


===========================================
COMMAND: zypin (main help)
TIMESTAMP: Mon Sep 22 19:36:57 +07 2025
===========================================

🚀 Zypin Global Mode
==============================
Zypin Testing Framework - Global Commands

📋 Available Commands:
=========================
  start          Start testing packages and server
  create-project Create a new test project from template
  update         Update zypin framework and packages
  health         Check health status of running packages
  mcp            Start MCP server for browser automation

For more help: zypin <command> --help

===========================================


===========================================
COMMAND: zypin start --help
TIMESTAMP: Mon Sep 22 19:36:57 +07 2025
===========================================

🚀 Zypin Package Starter
==============================
Start testing packages and their services

📦 Available Packages:
=========================
  ● selenium
    Capabilities: start, run, health
    Templates: basic-webdriver, cucumber-bdd

💡 Usage Examples:
====================
  zypin start --packages <package>

🔧 Options:
===============
  --packages <packages>  Comma-separated list of packages to start

📚 Next Steps:
===============
  1. Start packages:  zypin start --packages <package>
  2. Check health:    zypin health --server http://localhost:8421
  3. Create project:  zypin create-project <name> --template <template>

For more help: zypin --help

===========================================


===========================================
COMMAND: zypin create-project --help
TIMESTAMP: Mon Sep 22 19:36:57 +07 2025
===========================================

🚀 Zypin Project Creator
========================================
Create a new test project from available templates

📋 Available Templates:
=========================
  ● selenium/basic-webdriver
    Package: selenium | Template: basic-webdriver
    Basic WebDriver test project created with Zypin Framework
  ● selenium/cucumber-bdd
    Package: selenium | Template: cucumber-bdd
    Cucumber BDD test project created with Zypin Framework

💡 Usage Examples:
====================
  zypin create-project my-tests --template <package>/<template>

🔧 Options:
===============
  --template <template>  Template to use (required)
  --force               Overwrite existing directory

📚 Next Steps:
===============
  1. Create project: zypin create-project <name> --template <template>
  2. Install deps:   cd <project> && npm install
  3. Learn to run:   zypin run --help

For more help: zypin --help

===========================================


===========================================
COMMAND: zypin update --help
TIMESTAMP: Mon Sep 22 19:36:57 +07 2025
===========================================

Usage: zypin update [options]

Update zypin framework and all @zypin packages to latest versions

Options:
  -h, --help  display help for command

===========================================


===========================================
COMMAND: zypin mcp --help
TIMESTAMP: Mon Sep 22 19:36:57 +07 2025
===========================================

🤖 Zypin MCP Server
=========================
Start MCP server for browser automation via Model Context Protocol

💡 Usage Examples:
====================
  zypin mcp
  zypin mcp --browser firefox --headed
  zypin mcp --browser webkit --width 1920 --height 1080
  zypin mcp --timeout 60000

🔧 Options:
===============
  -b, --browser <browser>  Browser to use (chromium, firefox, webkit) [default: chromium]
  --headed                Run browser in headed mode (visible)
  -w, --width <width>     Viewport width [default: 1280]
  -l, --height <height>   Viewport height [default: 720]
  -t, --timeout <ms>      Default timeout in milliseconds [default: 30000]

📚 Next Steps:
===============
  1. Start MCP server: zypin mcp
  2. Connect AI tools: Use MCP protocol to connect
  3. Automate browser: Send commands via MCP

🔍 What it does:
====================
  • Starts Model Context Protocol server
  • Provides browser automation capabilities
  • Enables AI tools to control browsers
  • Supports multiple browsers and configurations

For more help: zypin --help

===========================================


===========================================
COMMAND: zypin health --help
TIMESTAMP: Mon Sep 22 19:36:57 +07 2025
===========================================

🏥 Zypin Health Checker
==============================
Check health status of running packages on remote server

💡 Usage Examples:
====================
  zypin health --server http://localhost:8421
  zypin health --server http://remote-server:8421
  zypin health --server http://192.168.1.100:8421

🔧 Options:
===============
  --server <url>        Zypin server URL (required)
  --debug               Enable debug mode

📚 Next Steps:
===============
  1. Start server:    zypin start --packages <package>
  2. Check health:    zypin health --server http://localhost:8421

🔍 What it shows:
====================
  • Number of running packages
  • Package names and PIDs
  • Start times and status

For more help: zypin --help

===========================================


===========================================
COMMAND: zypin run --help (template mode)
TIMESTAMP: Mon Sep 22 19:36:57 +07 2025
===========================================

🧪 Zypin Test Runner
==============================
Run tests using detected template from package.json

📋 Current Project:
====================
  Package: selenium
  Template: cucumber-bdd

💡 Usage Examples:
====================
  zypin run --input features/
  zypin run --input features/demo.feature
  zypin run --input features/login.feature,features/checkout.feature

🔧 Configuration Options:
=========================
  --input <files>        Test files or directories to run (required)
  --browser <browser>     Browser (chrome, firefox, safari, edge)
  --headless             Run in headless mode
  --timeout <ms>         Test timeout in milliseconds
  --parallel <number>    Number of parallel executions
  --retries <number>     Number of retries for failed tests
  --window-size <size>   Browser window size (WIDTHxHEIGHT)

📚 Next Steps:
===============
  1. Start servers: zypin start --packages <package>
  2. Run tests: zypin run --input features/
  3. Run with options: zypin run --input features/ --browser firefox --headless

For more help: zypin --help

===========================================


===========================================
COMMAND: zypin guide --help (template mode)
TIMESTAMP: Mon Sep 22 19:36:58 +07 2025
===========================================

📚 Zypin Guide Viewer
==============================
View usage guides and documentation for templates

💡 Usage:
===============
  zypin guide --template <template>   # Show specific guide
  zypin guide --list             # List available guides

📋 Available guides:
====================
  • selenium/cucumber-bdd

For more help: zypin --help

===========================================

